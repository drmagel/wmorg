exports.getPlans = function(req, res){
  var api = 'getPlans'
    , sessID = req.headers.auth
    , operand // valid values: 'active', 'permanent', 'pending', 'completed', 'all'
    , userID = Number(req.body.userID || 0)
    , body = {};
  if ( sessID === undefined ||
       sessID !== req.body.sessID ||
       userID === 0 ) {return res.end()};
  res.set('Content-Type', 'application/json');
  res.set('Auth', sessID);
  body.sessID = sessID;
//------------------------------------------------------
  var method = ''
    , d = new Date()
    ;
  req.query.operand ? operand = req.query.operand : operand = req.body.operand;
  if((operand || '').length === 0){operand = 'active'}; // Set default value to 'active'

  session.get(sessID,{userID:1, validTill:1}, function(e,r){ // session validation
    if(e){return res.status(500).json({error: "API:"+api+":session validation: "+e})};
    if(r === null || r.userID !== userID){ // no sessID or different userID
      body.plans = [];
      body.result = false;
      body.reason = 'invalid_sessid';
      res.json(body);
    } else if(r.validTill < d.getTime()) { // sessID is expired
      body.plans = [];
      body.result = false;
      body.reason = 'sessid_expired';
      res.json(body);
    } else { // sessID is OK
      switch(operand){
        case 'active': method = 'Active';
        break;
        case 'permanent': method = 'Permanent';
        break;
        case 'pending': method = 'Pending';
        break;
        case 'completed': method = 'Completed';
        break;
        case 'all': method = 'All';
        break;
        default:
          res.status(500).json({error: "API:"+api+": Operand "+operand+" is not supported"});
      }
      method = 'get'+method+'Plans';
      plans[method](function(e,r){
        if(e){return res.status(500).json({error: "API:"+api+": "+e})};
        if(r.length > 1){r.sort(function(a,b){return a.planID - b.planID})};
        body.result = true;
        body.plans = r;
        res.json(body);
      });
    } // if-else
  }); // session validation
}

