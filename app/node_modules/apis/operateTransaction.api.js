exports.operateTransaction = function(req, res){
  var api = 'operateTransaction'
    , sessID = req.headers.auth
    , operand // valid values: all
    , userID = Number(req.body.userID) || 0
    , body = {};
  if ( sessID === undefined ||
       sessID !== req.body.sessID ||
       userID === 0 ) {return res.end()};
  res.set('Content-Type', 'application/json');
  res.set('Auth', sessID);
  body.sessID = sessID;
//------------------------------------------------------
  req.query.operand ? operand = req.query.operand : operand = req.body.operand;

  var d = new Date()
    , transID = req.body.transID || []
    , transaction = req.body.transaction || [] // for 'create' and 'update' operands
    , filter = req.body.filter || {} // filter for 'get' operand
  ;

//19
  session.get(sessID,{userID:1, validTill:1}, function(e,r){ // session validation
    if(e){return res.status(500).json({error: "API:"+api+":session validation: "+e})};
    if(r === null || r.userID !== userID){ // no sessID or different userID
      return errResponse(reason.invalidSessid, body, res);
//      body.result = false;
//      body.reason = 'invalid_sessid';
//      res.json(body);
    } else if(r.validTill < d.getTime()) { // sessID is expired
      return errResponse(reason.expiredSessid, body, res);
//      body.result = false;
//      body.reason = 'sessid_expired';
//      res.json(body);
    } else { // sessID is OK
      switch(operand){
        case 'create':
        break;
        case 'update':
        break;
        case 'get':
        break;
        case 'getUserTransactions':
        break;
        case 'approve':
        break;
        case 'sendMessage':
        break;
//        case '':
//        break;
        default:
          res.status(500).json({error: "API:"+api+": Operand "+operand+" is not supported"});
      } // switch
// 2
    } // if-else
  }); // session validation
}

