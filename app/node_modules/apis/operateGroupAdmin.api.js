exports.operateGroupAdmin = function(req, res){
  var api = 'operateGroupAdmin'
    , sessID = req.headers.auth
    , operand = req.query.operand ? req.query.operand : req.body.operand || ''
    , userID = Number(req.body.userID) || 0
    , body = {};
  if ( sessID === undefined ||
       sessID !== req.body.sessID ||
       userID === 0 ||
       operand === '' ) {return res.end()};
  res.set('Content-Type', 'application/json');
  res.set('Auth', sessID);
  body.sessID = sessID;
//------------------------------------------------------

  var d = new Date()
    ;

//19
  session.get(sessID,{userID:1, validTill:1}, function(e,r){ // session validation
    if(e){return res.status(500).json({error: "API:"+api+":session validation: "+e})};
    if(r === null || r.userID !== userID){ // no sessID or different userID
      body.result = false;
      body.reason = 'invalid_sessid';
      res.json(body);
    } else if(r.validTill < d.getTime()) { // sessID is expired
      body.result = false;
      body.reason = 'sessid_expired';
      res.json(body);
    } else { // sessID is OK
      switch(operand){
        case 'assign':
          var gradmID = Number(req.body.gradmID) || 0;
          if(!!!gradmID){return res.end()};
          groupadmin.get(gradmID, {userID:1}, function(e,r){
            if(e){return res.status(500).json({error: "API:"+api+":groupadmin get: "+e})};
            if(!!!r){return errResponse(reason.roleError, body, res)};
            users.update(userID,{groupAdminUserID: gradmID}, function(e,r){
              if(e){return res.status(500).json({error: "API:"+api+":user update: "+e})};
            });
            groupadmin.addMember(gradmID, userID, function(e,r){
              if(e){return res.status(500).json({error: "API:"+api+":groupadmin addMember: "+e})};
            });
            body.result = true;
            res.json(body);              
          }) // groupadmin.get
        break;
        case 'fire':
          var gradmID = Number(req.body.gradmID) || 0;
          if(!!!gradmID){return res.end()};
          groupadmin.get(gradmID, {userID:1}, function(e,r){
            if(e){return res.status(500).json({error: "API:"+api+":groupadmin get: "+e})};
            if(!!!r){return errResponse(reason.roleError, body, res)};
            users.update(userID,{groupAdminUserID: 1}, function(e,r){
              if(e){return res.status(500).json({error: "API:"+api+":user update: "+e})};
            });
            groupadmin.delMember(gradmID, userID, function(e,r){
              if(e){return res.status(500).json({error: "API:"+api+":groupadmin delMember: "+e})};
            });
            body.result = true;
            res.json(body);
          }) // groupadmin.get
          break;
        case 'replace':
          var gradmID = Number(req.body.gradmID) || 0;
          if(!!!gradmID){return res.end()};
          groupadmin.get(gradmID, {userID:1}, function(e,r){
            if(e){return res.status(500).json({error: "API:"+api+":groupadmin get: "+e})};
            if(!!!r){return errResponse(reason.roleError, body, res)};
            users.get(userID, {groupAdminUserID: 1}, function(e,r){
              if(e){return res.status(500).json({error: "API:"+api+":user get: "+e})};
              var firedID = r.groupAdminUserID;
              groupadmin.delMember(firedID, userID, function(e,r){
                if(e){return res.status(500).json({error: "API:"+api+":groupadmin delMember: "+e})};
              });
              groupadmin.addMember(gradmID, userID, function(e,r){
                if(e){return res.status(500).json({error: "API:"+api+":groupadmin addMember: "+e})};
              });
              users.update(userID,{groupAdminUserID: gradmID}, function(e,r){
                if(e){return res.status(500).json({error: "API:"+api+":user update: "+e})};
              });
              body.result = true;
              res.json(body);
            }); // users.get
          }) // groupadmin.get
        break;
        case 'getAll':
          var query = req.body.query || {};
          groupadmin.getList(query,{members:0},function(e,arr){
            if(e){return res.status(500).json({error: "API:"+api+":groupadmin getList: "+e})};
            body.result = true;
            body.groupadmin = arr;
            res.json(body);            
          });
        break;
//        case '':
//        break;
        default:
          res.status(500).json({error: "API:"+api+": Operand "+operand+" is not supported"});
      } // switch
// 2
    } // if-else
  }); // session validation
}

