exports.enroll = function(req, res){
  var api = 'enroll'
    , operand
    , body = {};
  if(req.headers.auth === undefined ||
     req.headers.auth !== api){return res.end();}

  var email = req.body.email || ''
    , verStr = req.body.string || ''
    , verNum = req.body.number || 0
    , lang = req.body.lang || ''
    , phone= req.body.phone || ''
    ;
  res.set('Content-Type', 'application/json');
  res.set('Auth', api);
//------------------------------------------------------
  req.query.operand ? operand = req.query.operand : operand = req.body.operand;

  switch(operand){
  case 'checkEmail':
      if(email === '' || lang === ''){return res.end()};
      users.checkEmail(email,function(e,r){
        if(e){return res.status(500).json({error: "API:"+api+": "+e})};
        if(r.length){
          body = r[0];
          body.result = false;
          body.reason = 'email_already_exists';
          return res.json(body);
        } else {
          var verStr  = Math.random().toString(26).replace(/[^a-z]+/g, '').substr(1,8)
            , verNum  = Math.random().toString().replace(/[^\d]+/g, '').substr(1,8)
            ;
          body.email = email;
          smtp.sendMail(registrationMail(lang, email, verStr, verNum), function(e,r){
            if(e){
              body.result = false;
              body.reason = 'non_existent_email';
              return res.json(body);
            };
            enrolls.insert({email: email, number: verNum, string: verStr}, function(e,r){
              if(e){return res.status(500).json({error: "API:"+api+": "+e})};
              body.result = true;
              return res.json(body);
            });
          });  
        }
      });
  break;
  case 'checkPhone':
      if(phone === ''){return res.end()};
      users.checkPhone(phone,function(e,r){
        if(e){return res.status(500).json({error: "API:"+api+": "+e})};
        if(r.length){
          body = r[0];
          body.result = false;
          body.reason = 'phone_already_exists';
          return res.json(body);
        } else {
          body.result = true;
          return res.json(body);
        }
      });
  break;
  case 'reassert':
      if(email === '' || verStr === '' || verNum === 0 ){return res.end()};
      enrolls.get({email: email, string: verStr, number: verNum},function(e,r){
        if(e){return res.status(500).json({error: "API:"+api+": "+e})};
        if(!!!r){
          body.result = false;
          body.reason = 'not_valid';
          return res.json(body);
        }
        body.result = true;
        return res.json(body);
      });
  break;
//        case '':
//        break;
  default:
    res.status(500).json({error: "API:"+api+": Operand "+operand+" is not supported"});
} // switch
  
}

