exports.employGroupAdmin = function(req, res){
  var api = 'employGroupAdmin'
    , sessID = req.headers.auth
    , operand = req.query.operand ? req.query.operand : req.body.operand || ''
    , userID = Number(req.body.userID) || 0
    , body = {};
  if ( sessID === undefined ||
       sessID !== req.body.sessID ||
       userID === 0 ||
       operand === '' ) {return res.end()};
  res.set('Content-Type', 'application/json');
  res.set('Auth', sessID);
  body.sessID = sessID;
//------------------------------------------------------
  var permissions = ['officeAdmin', 'globalAdmin']  // Required permissions for the API execution
    , d = new Date()
    , gradmins = req.body.gradmID || []
    ;

  if(!!!gradmins.toString().length){return res.end()};
  if(!!!Array.isArray(gradmins)){gradmins = [gradmins]};
  var grcounter = gradmins.length;
  body.groupAdmin = [];
  body.areadyAssigned = [];
  body.areadyDischarged = [];
  body.userInactive = [];

//19
  session.get(sessID,{userID:1, validTill:1}, function(e,r){ // session validation
    if(e){return res.status(500).json({error: "API:"+api+":session validation: "+e})};
    if(r === null || r.userID !== userID){ // no sessID or different userID
      return errResponse(reason.invalidSessid, body, res)
    } else if(r.validTill < d.getTime()) { // sessID is expired
      return errResponse(reason.expiredSessid, body, res)
    } else { // sessID is OK
      users.get(userID, {'userRole':1}, function(e,r){
        if(e){return res.status(500).json({error: "API:"+api+":user role: "+e})};
        if(r.userRole.some(function(el){return permissions.indexOf(el) > -1;})){ // user has permission
          switch(operand){
            case 'reqruit':
              gradmins.forEach(function(ID){
                var gradmID = Number(ID);
                users.get(gradmID,
                          {userRole:1, userStatus:1, pictureURL:1, country:1, language:1, firstName:1, familyName:1, phone:1, email:1},
                          function(e,r){
                  if(e){return res.status(500).json({error: "API:"+api+":user get: "+e})};
                  if(r.userStatus !== 'active'){
                    body.userInactive.push(ID);
                  } else if(r.userRole.indexOf('groupAdmin') > -1){
                    body.areadyAssigned.push(ID);
                  } else {                      
                    var gradm = {
                          userID: gradmID,
                          firstName: {},
                          familyName: {},
                          pictureURL: r.pictureURL,
                          phone: r.phone,
                          email: r.email,
                          country: r.country,
                          region: [],
                          language: [r.language],
                          members: []
                        }
                      , counter = config.supportedLangsList.length
                      ;
                    config.supportedLangsList.forEach(function(el){
                      if (el.value == r.language){
                        gradm.firstName[el.value] = r.firstName;
                        gradm.familyName[el.value] = r.familyName;                    
                      } else {
                        gradm.firstName[el.value] = '';
                        gradm.familyName[el.value] = '';
                      };
                      if(--counter === 0){
                        groupadmin.insert(gradm, function(e,r){
                          if(e){return res.status(500).json({error: "API:"+api+":groupadmin insert: "+e})};
                        });
                        users.get(gradmID,{userRole:1},function(e,r){
                          if(e){return res.status(500).json({error: "API:"+api+":users get: "+e})};                      
                          r.userRole.push('groupAdmin');
                          users.updateUserRole(gradmID,r.userRole,function(e){                          
                            if(e){return res.status(500).json({error: "API:"+api+":groupadmin updateUserRole: "+e})};
                          })
                        });
                        body.groupAdmin.push(ID);
                      } // counter === 0
                    }); // config.supportedLangsList
                  } // if-else
                  if(--grcounter === 0){
                    body.result = body.groupAdmin.length ? true : false;
                    return res.json(body);                        
                  } // grcounter === 0
                }) // users.get()
              }); // gradmins.forEach 
            break; // reqruit
            case 'discharge':
              gradmins.forEach(function(ID){
                var gradmID = Number(ID);
                users.get(gradmID,{userRole:1, userStatus:1}, function(e,r){
                  if(e){return res.status(500).json({error: "API:"+api+":user get: "+e})};
                  if(r.userStatus !== 'active'){
                    body.userInactive.push(ID);
                  } else if(r.userRole.indexOf('groupAdmin') === -1){
                    body.areadyDischarged.push(ID);
                  } else {                    
                    groupadmin.get(gradmID,{members:1}, function(e,r){
                      if(e){return res.status(500).json({error: "API:"+api+":groupadmin get: "+e})};
                      r.members.forEach(function(uid){
                        users.update(uid,{groupAdminUserID: 2},function(e){
                          if(e){return res.status(500).json({error: "API:"+api+":users update: "+e})};                      
                        });
                      });
                      groupadmin.remove(gradmID,function(e){
                        if(e){return res.status(500).json({error: "API:"+api+":groupadmin remove: "+e})}
                      });
                    })
                    users.get(gradmID,{userRole:1},function(e,r){
                      if(e){return res.status(500).json({error: "API:"+api+":users get: "+e})};
                      users.updateUserRole(
                        gradmID,
                        r.userRole.filter(function(el){return el !== 'groupAdmin'}),
                        function(e){
                          if(e){return res.status(500).json({error: "API:"+api+":groupadmin updateUserRole: "+e})};
                        }
                      )
                    });
                    body.groupAdmin.push(ID);
                    if(--grcounter === 0){
                      body.result = body.groupAdmin.length ? true : false;
                      return res.json(body);                        
                    } // grcounter === 0
                  } // else-if
                }); // users.get()
              }) // gradmins.forEach
            break; // discharge
            case 'updateProfile':
              var data = req.body.data || {};
              if(!!!Object.keys(data).length){return res.end()};
              if(gradmins.length !== 1){return res.end()}; // Only one update at a time.
              var gradmID = gradmins[0];
              users.get(gradmID,{userRole:1, userStatus:1}, function(e,r){
                if(e){return res.status(500).json({error: "API:"+api+":user get: "+e})};
                if(r.userStatus !== 'active'){
                  body.userInactive.push(gradmID);
                } else if(r.userRole.indexOf('groupAdmin') === -1){
                  body.areadyDischarged.push(gradmID);
                } else {
                  body.groupAdmin.push(gradmID);
                  groupadmin.update(gradmID, data, function(e,r){
                    if(e){return res.status(500).json({error: "API:"+api+":groupadmin update: "+e})};                
                  });
                }
                body.result = body.groupAdmin.length ? true : false;
                return res.json(body);
              })
            break; // updateProfile
            default:
              res.status(500).json({error: "API:"+api+": Operand "+operand+" is not supported"});
          } // switch
        } else { // user doesn't have permission
          return errResponse(reason.permissionDenied, body, res)
        }

      }); // users.get()
// 2
    } // if-else
  }); // session validation
}
