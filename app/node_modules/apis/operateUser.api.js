exports.operateUser = function(req, res){
  var api = 'operateUser'
    , sessID = req.headers.auth
    , operand // valid values: 'get', 'update', 'updateUserRating'
    , userID = Number(req.body.userID || 0)
    , body = {};
  if ( sessID === undefined ||
       sessID !== req.body.sessID ||
       userID === 0 ) {return res.end()};
  res.set('Content-Type', 'application/json');
  res.set('Auth', sessID);
  body.sessID = sessID;
//------------------------------------------------------
  var data = req.body.data || {} // user data for update and updateUserRating APIs
    , filter = req.body.filter || {} // filter for get API
    , d = new Date()
    ;
  req.query.operand ? operand = req.query.operand : operand = req.body.operand;
  body.sessID = sessID;

  session.get(sessID,{userID:1, validTill:1}, function(e,r){ // session validation
    if(e){return res.status(500).json({error: "API:"+api+":session validation: "+e})};
    if(r === null || r.userID !== userID){ // no sessID or different userID
      return errResponse(reason.invalidSessid, body, res);
//      body.result = false;
//      body.reason = 'invalid_sessid';
//      res.json(body);
    } else if(r.validTill < d.getTime()) { // sessID is expired
      return errResponse(reason.expiredSessid, body, res);
//      body.result = false;
//      body.reason = 'sessid_expired';
//      res.json(body);
    } else { // sessID is OK
      switch (operand){
        case 'get':
          users.get(userID, filter, function(e,r){
            if(e){return res.status(500).json({error: "API:"+api+": "+e})};
            body.result = true;
            body.userID = userID;
            body.user = r;
            res.json(body);
          });
        break;
        case 'update':
          users.update(userID, data, function(e,r){
            if(e){return res.status(500).json({error: "API:"+api+": "+e})};
            body.result = true;
            body.userID = userID;
            res.json(body);
          });
        break;
        case 'updateUserRating':
          if(((data.userID || 0) === 0) || ((data.score || 0) === 0)){
            return errResponse(reason.invalidParameters, body, res);
//            body.result = false;
//            body.reason = 'invalid_parameters';
//            res.json(body);
          } else {
            users.updateUserRating(data.userID, data.score, function(e,r){
              if(e){return res.status(500).json({error: "API:"+api+": "+e})};
              body.result = true;
              body.data = {userID: data.userID, userRating: r.value.userRating};
              res.json(body);
            });
          }
        break;
        default:
          res.status(500).json({error: "API:"+api+": Operand "+operand+" is not supported"})
        ;
      }
    } // if-else
  }); // session validation
}

