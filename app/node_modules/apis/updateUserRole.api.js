exports.updateUserRole = function(req, res){
  var api = 'updateUserRole'
    , sessID = req.headers.auth
    , body = {}
    , userID = Number(req.body.userID || 0)
    ;
  if ( sessID === undefined ||
       sessID !== req.body.sessID ||
       userID === 0 ) {return res.end()};
  res.set('Content-Type', 'application/json');
  res.set('Auth', sessID);
  body.sessID = sessID;
//------------------------------------------------------
  var data = req.body.data || {}
    , d = new Date()
    , permissions = ['globalAdmin'] // Required permissions for the API execution
    ;

  session.get(sessID,{userID:1, validTill:1}, function(e,r){ // session validation
    if(e){return res.status(500).json({error: "API:"+api+":session validation: "+e})};
    if(r === null || r.userID !== userID){ // no sessID or different userID
      return errResponse(reason.invalidSessid, body, res);
//      body.result = false;
//      body.reason = 'invalid_sessid';
//      res.json(body);
    } else if(r.validTill < d.getTime()) { // sessID is expired
      return errResponse(reason.expiredSessid, body, res);
//      body.result = false;
//      body.reason = 'sessid_expired';
//      res.json(body);
    } else { // user validation
      users.get(userID, {'userRole':1}, function(e,r){
        if(e){return res.status(500).json({error: "API:"+api+":user role: "+e})};
        if(r.userRole.some(function(el){return permissions.indexOf(el) > -1;})){ // user has permission
          if(((data.userID || '').length === 0) || ((data.userRole || []).length === 0)){ // no userID or userRole
            return errResponse(reason.invalidParameters, body, res);
//            body.result = false;
//            body.reason = 'invalid_parameters';
//            res.json(body);
          } else { // updateUserRole
            users.updateUserRole(data.userID, data.userRole, function(e,r){
              if(e){return res.status(500).json({error: "API:"+api+": "+e})};
              body.result = true;
              res.json(body);
            })
          };
        } else { // user doesn't have permission
          return errResponse(reason.permissionDenied, body, res);
//          body.result = false;
//          body.reason = 'permission_denied';
//          res.json(body);
        }
      }); // users.get
    } // if-else
  }); // session.validate()
}

