// Locked Users model - APIs for the lockedusers collection in the wwmmorg DB
var collectionName = 'lockedusers'
  , login = require('../config').login
  ;

var  model = function(){
  this.db = {};
  this.collection = {};

  this.setDB = function(db) {
    this.db = db;
    this.collection = db.collection(collectionName);
    return this;
  };

  this.insert = function(email, callback) {
    var data = { email: email,
                 attempts: 1,
                 lockedTill: null
               };
    return this.collection.insertOne(data, {w:1,j:true}, callback || function(){});
  };

  this.update = function(email, callback) {
    return this.collection.updateOne(
             {email: email},
             {$inc: { attempts: 1 }},
             {w:1,j:true},
             callback || function(){}
           );
  };

  this.renew = function(email, callback) {
    return this.collection.updateOne(
             {email: email},
             {$set: {attempts: 1, lockedTill: null}},
             {w:1,j:true},
             callback || function(){}
           );
  };

  this.get = function(email, callback) {
    return this.collection.find({email: email}, {_id:0,email:0})
             .limit(1)
             .next(callback || function(){});
  };

  this.remove = function(email, callback) { // For the test purpose only
    return this.collection.deleteOne({email: email}, {w:1,j:true}, callback || function(){});
  };

  this.lock = function(email, callback) {
    var d = new Date()
      , data = { email: email,
                 attempts: login.maxWrongPasswdNum,
                 lockedTill: new Date(d.setMinutes(d.getMinutes() + login.lockedPeriod)).getTime()
               }
      ;
    return this.collection.updateOne({email: email},{$set: data}, {w:1,j:true}, callback || function(){});
  };
};

module.exports = new model();
