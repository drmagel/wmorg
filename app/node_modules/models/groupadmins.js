// Group Admins model - APIs for the groupadmins collection in the wwmmorg DB
var collectionName = 'groupadmins',
    model = function(){

  this.db = {};
  this.collection = {};

  this.setDB = function(db) {
    this.db = db;
    this.collection = db.collection(collectionName);
    return this;
  };

  this.insert = function(data, callback) {
    return this.collection.insertOne(data, {w:1,j:true}, callback || function(){});
  };

  this.update = function(userID, data, callback) {
    var userID = Number(userID);
    if(Object.keys(data).length === 0){data.userID = userID};
    return this.collection.updateOne({userID: userID}, {$set: data}, {w:1,j:true}, callback || function(){});
  };

  this.get = function(userID, filter, callback) {
    var userID = Number(userID);
    filter ? filter._id = 0 : {};
    return this.collection.find({userID: userID}, filter)
             .limit(1)
             .next(callback || function(){});
  };

  this.getList = function(userID, filter, callback) {
    var userID = Number(userID);
    filter ? filter._id = 0 : {};
    return this.collection.find({userID: userID}, filter).toArray(callback);
  };

  this.remove = function(userID, callback) {
    var userID = Number(userID);
    return this.collection.deleteOne({userID: userID}, {w:1,j:true}, callback || function(){});
  };

  this.addMember = function(adminID, userID, callback) {
    var self = this
      , userID = Number(userID)
      , adminID = Number(adminID);
    return self.collection.find({userID: adminID}, {_id:0, members:1})
         .next(function(e,r){
         if(e) return console.error("ADMINS:addMember: " + e);
           //if(r.members.indexOf(userID) > -1) return callback(e,r) || function(){}();
           return self.collection.updateOne(
                    {userID: adminID},
                    {$set: {members: r.members.concat(userID)}},
                    {w:1,j:true}, callback || function(){}
                  );
         });
  };

  this.delMember = function(adminID, userID, callback) {
    var self = this
      , userID = Number(userID)
      , adminID = Number(adminID);
    return self.collection.find({userID: adminID}, {_id:0, members:1})
         .next(function(e,r){
           if(e) return console.error("ADMINS:delMember: " + e);
           return self.collection.updateOne(
                    {userID: adminID},
                    {$set: {members: r.members.filter(function(el){return el !== userID})}},
                    {w:1,j:true}, callback || function(){}
                  );
         });
  };
};

module.exports = new model();
