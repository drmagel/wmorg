// Transaction archive model - APIs for the transarchive collection in the wwmmorg DB
var collectionName = 'transarchive',
    model = function(){

  this.db = {};
  this.collection = {};

  this.setDB = function(db) {
    this.db = db;
    this.collection = db.collection(collectionName);
    return this;
  };

  this.insert = function(data, callback) {
    return this.collection.insertOne(data, {w:1,j:true}, callback || function(){});
  };

  this.get = function(transID, filter, callback) { // By transID
    var transID = Number(transID);
    filter ? filter._id = 0 : filter = {_id: 0};
    return this.collection.find({transID: transID}, filter)
               .limit(1)
               .next(callback || function(){});
  };
  
  this.remove = function(transID, callback) { // Only for testing purpose
    if(!!!Array.isArray(transID)){transID = [transID]};
    transID = transID.map(function(el){return Number(el)});
    return this.collection.deleteMany({transID: {$in: transID}}, {w:1,j:true}, callback || function(){});
  };

  this.getUserTransactions = function(userID, filter, callback) { // List of transactions by userID
    var userID = Number(userID);
    filter ? filter._id = 0 : filter = {_id: 0};
    return this.collection.find({userID: userID}, filter).toArray(callback);
  };
};

module.exports = new model();
