// Plans model - APIs for the plans collection in the wwmmorg DB
var collectionName = 'plans'
  , model = function(){

  this.db = {};
  this.collection = {};

  this.setDB = function(db) {
    this.db = db;
    this.collection = db.collection(collectionName);
    return this;
  };

  this.insert = function(data, callback) {
    return this.collection.insertOne(data, {w:1,j:true}, callback || function(){});
  };

  this.update = function(planID, data, callback) {
    var planID = Number(planID);
    if(Object.keys(data).length === 0){data.planID = planID};
    return this.collection.updateOne({planID: planID}, {$set: data}, {w:1,j:true}, callback || function(){});
  };

  this.get = function(planID, filter, callback) { // By planID
    var planID = Number(planID);
    filter ? filter._id = 0 : filter = {_id: 0};
    return this.collection.find({planID: planID}, filter)
               .limit(1)
               .next(callback || function(){});
  };

  this.remove = function(planID, callback) { 
    var planID = Number(planID);
    return this.collection.deleteOne({planID: planID}, {w:1,j:true}, callback || function(){});
  };

  this.getPlan = function(planID, callback) { // By planID
    var planID = Number(planID);
    return this.collection.find({planID: planID}, {_id: 0})
               .limit(1)
               .next(callback || function(){});
  };

  this.getActivePlans = function(callback) { // tillDate is Date() or 'permanent'
    var d = new Date()
      , now = d.getTime();
    return this.collection.find({$or: [
                                  {fromDate: {$lt: now}, tillDate: {$gt: now}},
                                  {fromDate: {$lt: now}, tillDate: 'permanent'}
                                ]},
                                {_id: 0})
               .sort({tillDate: 1})
               .toArray(callback);
  };

  this.getPendingPlans = function(callback) { // fromDate and tillDate are GT now. And tillDate is Date() or 'permanent'
    var d = new Date()
      , now = d.getTime();
    return this.collection.find({$or: [
                                  {fromDate: {$gt: now}, tillDate: {$gt: now}},
                                  {fromDate: {$gt: now}, tillDate: 'permanent'}
                                ]},
                                {_id: 0})
               .sort({tillDate: 1})
               .toArray(callback);
  };

  this.getCompletedPlans = function(callback) { // tillDate is LT now
    var d = new Date()
      , now = d.getTime();
    return this.collection.find({fromDate: {$lt: now}, tillDate: {$lt: now}},
                                {_id: 0})
               .sort({tillDate: 1})
               .toArray(callback);
  };

  this.getPermanentPlans = function(callback) { // tillDate is 'permanent'
    var d = new Date()
      , now = d.getTime();
    return this.collection.find({fromDate: {$lt: now}, tillDate: 'permanent'},
                                {_id: 0})
               .sort({tillDate: 1})
               .toArray(callback);
  };

  this.getAllPlans = function(callback) { 
    var d = new Date()
      , now = d.getTime();
    return this.collection.find({}, {_id: 0})
               .sort({tillDate: 1})
               .toArray(callback);
  };
};

module.exports = new model();
