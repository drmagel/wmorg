// Template model - APIs for the template collection in the wwmmorg DB
var collectionName = 'pendants',
    model = function(){

  this.db = {};
  this.collection = {};

  this.setDB = function(db) {
    this.db = db;
    this.collection = db.collection(collectionName);
    return this;
  };

  this.insert = function(data, callback) {
    return this.collection.insertOne(data, {w:1,j:true}, callback || function(){});
  };

  this.get = function(pndID, filter, callback) {
    var pndID = Number(pndID);
    filter ? filter._id = 0 : filter = {_id: 0};     
    return this.collection.find({pndID: pndID}, filter)
               .limit(1)
               .next(callback || function(){});
  };
  
  this.getBy = function(data, filter, callback) {
    var data = data || {};
    filter ? filter._id = 0 : filter = {_id: 0};
    return this.collection.find(data, filter)
               .toArray(callback || function(){});
  };

  this.remove = function(pndID, callback) {
    var pndID = Number(pndID);
    return this.collection.deleteOne({pndID: pndID}, {w:1,j:true}, callback || function(){});
  };

  this.updateStatus = function(pndID, Status, callback) {
    var pndID = Number(pndID);
    return this.collection.updateOne({pndID: pndID}, {$set: {status: Status}}, {w:1,j:true}, callback || function(){});
  };

  this.getOverduePendants = function(callback){
    var now = new Date().getTime();
    return this.collection.find({$and: [{status: 'offered'},
                                        {overdueDate: {$lt: now}}
                                ]},
                                {_id: 0})
               .sort({overdueDate: 1})
               .toArray(callback);
  };
};

module.exports = new model();
