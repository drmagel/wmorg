exports.createLoanApplication = function(data, callback){
  var tt = 'createLoanApplication'
  , d = new Date()
  , locale = "en-us"
  , today = new Date(d.toLocaleString(locale, {month: "long", day: "numeric", year: "numeric"}))
  ;

/***
  applications = { // LOANs
    appID: ,
    userID: ,
    assetAppID: , //Optional, only if ASSET was created 
    amount: ,  // initial app amount
    balance: , // real app amout (goes from 'amount' to 0.00)
    asset: ,   // loaned money which can be collected
    pending: , // pending + balance + asset == amount. From pending to asset only after transaction is closed.
    pendants: [pndID, pndID], // only during the negotiation process. Otherwise pendants: [],
    plan: {
      planID: ,
      interest: , // procents
      duration: 
    },
    transactions: [{transID, amount, status},{}],
    type: 'loan',
    weight: ,
    status: active|freezed|completed|canceled,
    releaseDate: Date.now() + plan.duration
    creationDate: Date.now()
  }
  
  data = { // Provided
    userID: ,
    amount: ,
    plan: {
      planID: ,
      interest: , // procents
      duration: 
    }
  }
***/

/*** data setting ***/
  data.balance = data.balance || 0;
  data.asset = data.amount - data.balance;
  data.pending = 0;
  data.pendants = [];
  data.transactions = [{transID: 0, amount: data.amount, status: 'completed'}];
  data.type = 'loan';
  data.weight = data.weight || 9;
  data.status = data.balance ? 'active' : 'completed';
  data.releaseDate = generateDate();
  data.creationDate = generateDate(data.plan.duration);
  
  createApplication(data, function(application){callback(application)});
}